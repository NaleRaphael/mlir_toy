#ifndef DIALECT_SAMPLE_H
#define DIALECT_SAMPLE_H

// Header of dialect
// ref: mlir/include/mlir/Dialect/Func/IR/FuncOps.h

// #include "mlir/IR/BuitinTypes.h"
#include "mlir/IR/Dialect.h"

// ---------------------------------------------------------------------------
// Dialect declarations (usually generated by tablegen: XXXDialect.h.inc)
// ---------------------------------------------------------------------------
namespace mlir {
namespace sample {

class SampleDialect : public ::mlir::Dialect {
    explicit SampleDialect(::mlir::MLIRContext *context);
    void initialize();
    friend class ::mlir::MLIRContext;
public:
    ~SampleDialect() override;
    static constexpr ::llvm::StringLiteral getDialectNamespace() {
        return ::llvm::StringLiteral("sample");
    }
};

} // namespace sample
} // namespace mlir

MLIR_DECLARE_EXPLICIT_TYPE_ID(::mlir::sample::SampleDialect)

#endif // DIALECT_SAMPLE_H
